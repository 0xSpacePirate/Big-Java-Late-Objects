import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.*;
import java.io.PrintWriter;

public class Main {

    public static void main(String[] args) {
//	•• P 15.15 Try to find two words with the same hash code in a large file. Keep a Map<Integer,
//                HashSet<String>>. When you read in a word, compute its hash code h and put the
//        word in the set whose key is h. Then iterate through all keys and print the sets whose
//        size is > 1.

        List<String> list = new ArrayList<>();
        Map<Integer,HashSet<String>> sameHashCodeWords = new HashMap<>();
        HashSet<String> words = new HashSet<>();
        int count = 1;

        try {
            Scanner scanner = new Scanner(new File("text.txt"));
            while(scanner.hasNext()){
                list.add(scanner.next());
            }
            for(int i = 0; i < list.size(); i++){
                for(int j = i + 1; j < list.size();j++){
                    if(list.get(i).hashCode() == list.get(j).hashCode() && list.get(i).length() > 1){
                        words.add(list.get(j));
                        sameHashCodeWords.put(list.get(i).hashCode(),words);
                        System.out.println("\n" + list.get(i).hashCode() + " - ");
                        System.out.println( count + ". " + list.get(j));
                        count++;
                    }
                }
                count = 1;
            }
            scanner.close();
        }catch (FileNotFoundException e){
            e.printStackTrace();
        }
        print(sameHashCodeWords);
    }

    public static void print(Map<Integer, HashSet<String>> aMap){
        if(!aMap.isEmpty()) {
            for (Map.Entry<Integer, HashSet<String>> m : aMap.entrySet()) {
                System.out.println(m.getKey() + " - ");
                for (String str : m.getValue()) {
                    System.out.println(str);
                }
                System.out.println("- - - - - - - - - - -");
            }
        }else{
            System.out.println("There are no objects with the same hashcode.");
        }
    }



    @Override
    public int hashCode() {
        return super.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        return super.equals(obj);
    }
}
