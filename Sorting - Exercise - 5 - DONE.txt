package com.bonche;

/**
 * Created by Bonchev on 2/20/2017.
 */
public class Value implements Comparable<Value> {

    private String name;
    private String number;

    public Value(String name, String number){
        this.name = name;
        this.number = number;
    }

    public String getName() {return name;}
    public String getNumber() {return number;}

    @Override
    public int compareTo(Value obj) {
        Value anotherObject = (Value) obj;
        return name.compareTo(anotherObject.name);

    }
}


package com.bonche;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Scanner;



public class Main {

    public static LinkedList<Value> byNameVariable = new LinkedList<>();
    public static LinkedList<Value> byNumberVariable = new LinkedList<>();

    public static void main(String[] args) {
        readAndPrintFile();
    }

    public static void readAndPrintFile(){

        String word;
        try{
            Scanner scanner = new Scanner(new File("names"));
            while(scanner.hasNextLine()){
                word = scanner.nextLine();
                getOutInformation(word);
            }
            scanner.close();
        }catch(FileNotFoundException e){
            System.out.println("File not found!");
        }

        //sortByName();
        sortByNumber();

    }

    public static void getOutInformation(String word){
        for(int i = 0; i < word.length(); i++){
            if(word.charAt(i) == ',' && word.charAt(i + 1) == 'F' && word.charAt(i + 2) == ','){
                byNameVariable.add(new Value(word.substring(0,i),word.substring(i+3, word.length())));
                byNumberVariable.add(new Value(word.substring(i+3, word.length()),word.substring(0,i)));
            }

        }
    }

    public static void sortByName(){
        Collections.sort(byNameVariable);
        for(int i = 0; i < byNameVariable.size(); i++){
            System.out.println((i + 1) + ". " + byNameVariable.get(i).getName() + " - "
                    + byNameVariable.get(i).getNumber());

        }
    }

    public static void sortByNumber(){
        Collections.sort(byNumberVariable);
        for(int i = 0; i < byNumberVariable.size(); i++){
            System.out.println((i + 1) + ". " + byNumberVariable.get(i).getName() + " - "
                                + byNumberVariable.get(i).getNumber());
        }
    }
}