package com.bonche;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;
import java.lang.Object;

public class Main {
    public static void main(String[] args) {

//•• P14.15 Consider the binary search algorithm in Section 14.8. If no match is found, the search
//        method returns -1. Modify the method so that if a is not found, the method returns
//        -k - 1, where k is the position before which the element should be inserted. (This is
//        the same behavior as Arrays.binarySearch.)

      int[] list = new int[10];
       generateArray(list);
       printArray(list);
       System.out.println("\n- - - - - - - - - - - - - ");

        System.out.println("Position: " +
                search(list,0,list.length,2));


    }

    public static void generateArray(int[] list){
        for(int i = 0; i < list.length;i++){
            list[i] = (int) (Math.random() * 11);
        }
    }

    public static int lowest(int[] list){
        int low = 1000000;
        for(int i = 0; i < list.length; i++){
            if(list[i] < low){
                low = list[i];
            }
        }
        return low;
    }

    public static int highest(int[] list){
        int high = 0;
        for(int i = 0; i < list.length; i++){
            if(list[i] > high){
                high = list[i];
            }
        }
        return high;
    }

    public static int search(int[] list,int low, int high, int number) {

        if(low <= high){
            int middle = (low + high) / 2;
            if(list[middle] == number){return middle;}
            else if(list[middle] < number){
                return search(list, middle + 1,high, number);
            }else{
                return search(list,low, middle - 1, number);
            }
        }return (-low - 1);

    }

    public static void printArray(int[] list){
        for(int value: list){
            System.out.printf("%2d ", value);
        }
    }
}